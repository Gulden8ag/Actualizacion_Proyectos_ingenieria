{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenid@","text":"<p>Esta es mi documentacion sobre el curso de Actualizaci\u00f3n en el desarrollo de Proyectos en Ciencias e Ingenier\u00edas</p> <p>Soy Oliver Ochoa Garc\u00eda, coordinador de las licenciaturas en Ingenier\u00eda Mecatr\u00f3nica e Ingenier\u00eda en Electr\u00f3nica y Comunicaciones. Me dedico a impulsar proyectos educativos y de investigaci\u00f3n aplicada en \u00e1reas de tecnolog\u00eda, innovaci\u00f3n y rob\u00f3tica.</p> <p>\ud83d\udccc Puedes conocer m\u00e1s sobre mi trayectoria profesional en LinkedIn  Oliver Ochoa Garc\u00eda - LinkedIn</p> <p>Sobre el curso</p> <p>El curso \u201cActualizaci\u00f3n en el desarrollo de Proyectos en Ciencias e Ingenier\u00edas\u201d busca fortalecer las competencias de docentes y profesionales para guiar proyectos de investigaci\u00f3n aplicada, siguiendo metodolog\u00edas rigurosas y est\u00e1ndares acad\u00e9micos.</p> <p>Duraci\u00f3n: 50 horas (8 semanas)</p> <p>Modalidad: Teor\u00eda (50%) + Pr\u00e1ctica (50%)</p> <p>Reconocimiento: Se acredita por m\u00f3dulos y con un proyecto final</p> <p>Objetivo General</p> <p>Formar a los participantes en las competencias necesarias para dise\u00f1ar, ejecutar y comunicar proyectos en ciencia y tecnolog\u00eda, aplicando el m\u00e9todo cient\u00edfico, herramientas estad\u00edsticas y recursos digitales avanzados como la Inteligencia Artificial Generativa.</p> <p>Estructura del curso</p> <p>\ud83d\udcd8 M\u00f3dulo 1: Fundamentos de la investigaci\u00f3n y planeaci\u00f3n</p> <ul> <li>Semana 1: Introducci\u00f3n y fundamentos de la investigaci\u00f3n</li> <li>Semana 2: Planeaci\u00f3n del proyecto y revisi\u00f3n de literatura</li> </ul> <p>Entregable: Documento con justificaci\u00f3n, problema de investigaci\u00f3n, revisi\u00f3n inicial y cronograma.</p> <p>\ud83d\udcd7 M\u00f3dulo 2: Desarrollo metodol\u00f3gico y an\u00e1lisis de resultados</p> <ul> <li>Semana 3: Variables, dise\u00f1o metodol\u00f3gico y recolecci\u00f3n de datos</li> <li>Semana 4: Ejecuci\u00f3n y recolecci\u00f3n de datos</li> <li>Semana 5: An\u00e1lisis y evaluaci\u00f3n de resultados</li> </ul> <p>Entregable: Informe de avances con metodolog\u00eda, datos organizados, an\u00e1lisis inicial y discusi\u00f3n.</p> <p>\ud83d\udcd9 M\u00f3dulo 3: Comunicaci\u00f3n cient\u00edfica y herramientas avanzadas</p> <ul> <li> <p>Semana 6: Escritura y presentaci\u00f3n cient\u00edfica</p> </li> <li> <p>Semana 7: Aplicaciones de la Inteligencia Artificial Generativa en la investigaci\u00f3n</p> </li> <li> <p>Semana 8: Presentaci\u00f3n y cierre del proyecto</p> </li> </ul> <p>Entregable: Art\u00edculo cient\u00edfico final + exposici\u00f3n con retroalimentaci\u00f3n.</p> <p>Metodolog\u00eda</p> <p>50% teor\u00eda: Conceptos clave y ejemplos aplicados</p> <p>50% pr\u00e1ctica: Talleres, simulaciones, redacci\u00f3n y presentaciones</p>"},{"location":"Modulo_1/Actividad_1/","title":"Actividad 1: Caso de Design Thinking \"Reduccion del desperdicio de agua en instalaciones universitarias\"","text":""},{"location":"Modulo_1/Actividad_1/#mapa-mental","title":"Mapa mental","text":""},{"location":"Modulo_1/Actividad_1/#metodologia-design-thinking","title":"Metodolog\u00eda Design Thinking","text":"<p>Fase 1: Empatizar</p> <ul> <li> <p>Entrevistas a estudiantes y personal de mantenimiento.</p> </li> <li> <p>Observaci\u00f3n directa en ba\u00f1os, bebederos y \u00e1reas de riego.</p> </li> <li> <p>Identificaci\u00f3n de puntos cr\u00edticos: fugas, descuido, falta de cultura del ahorro.</p> </li> </ul> <p>Fase 2: Definir</p> <p>Problema principal: \u201cEl agua se desperdicia en instalaciones universitarias debido a fugas, malos h\u00e1bitos y ausencia de sistemas inteligentes de control.\u201d</p> <p>Fase 3: Idear</p> <p>Soluciones propuestas:</p> <ul> <li>Instalaci\u00f3n de grifos autom\u00e1ticos y temporizadores.</li> <li>Plataforma m\u00f3vil para reportar fugas en tiempo real.</li> <li>Programa de recompensas para facultades con menor consumo.</li> <li>Reaprovechamiento de aguas grises para riego.</li> </ul> <p>Fase 4: Prototipar</p> <ul> <li> <p>Crear un piloto en un edificio: instalar 3 grifos con sensor, se\u00f1al\u00e9tica de ahorro y sistema de registro de consumos.</p> </li> <li> <p>App simple (mockup en Figma o Miro) para reportar fugas.</p> </li> </ul> <p>Fase 5: Testear</p> <ul> <li> <p>Recolectar datos de ahorro en litros/mes tras la intervenci\u00f3n.</p> </li> <li> <p>Encuestas a usuarios sobre facilidad y aceptaci\u00f3n.</p> </li> <li> <p>Ajustar el prototipo antes de escalar al resto del campus.</p> </li> </ul>"},{"location":"Modulo_1/Actividad_2/","title":"Actividad 2: An\u00e1lisis de un caso de estudio aplicando el m\u00e9todo cient\u00edfico","text":"<p>Tarea: Revisar de manera individual el art\u00edculo \u201cSoluci\u00f3n de problemas de producci\u00f3n en una empresa manufacturera de calzado en Le\u00f3n Guanajuato, M\u00e9xico\u201d </p> <p>Analizar el caso de estudio e identificar las etapas del m\u00e9todo cient\u00edfico. Colocando la informaci\u00f3n en la tabla 1.</p> <p>Table 1. Etapas del m\u00e9todo cient\u00edfico</p> Etapa del m\u00e9todo cient\u00edfico Descripci\u00f3n en el caso de estudio Definici\u00f3n / Planteamiento del problema La empresa de calzado en Le\u00f3n ten\u00eda varios problemas en su producci\u00f3n: mucho desperdicio de material, tiempos de entrega que no siempre se cumpl\u00edan y algunas estaciones de trabajo saturadas mientras otras estaban casi sin carga. El gerente vio que era necesario hacer los procesos m\u00e1s eficientes. Formulaci\u00f3n de hip\u00f3tesis Si aplicamos herramientas de ingenier\u00eda de m\u00e9todos, balanceamos las l\u00edneas de producci\u00f3n y simplificamos algunas tareas repetitivas, entonces se puede reducir el desperdicio, eliminar cuellos de botella y mejorar la productividad en general. Recopilaci\u00f3n y an\u00e1lisis de datos Se observaron las operaciones directamente en la planta y se usaron herramientas como el diagrama de Ishikawa y el Pareto para ver qu\u00e9 estaba causando los problemas. Ah\u00ed se detectaron las estaciones cr\u00edticas, las operaciones manuales que hac\u00edan perder tiempo y los puntos donde se generaba m\u00e1s desperdicio. Confirmaci\u00f3n o rechazo de hip\u00f3tesis Con los datos en mano, se hicieron cambios: se reorganiz\u00f3 la carga de trabajo, se eliminaron tareas manuales repetitivas y se estableci\u00f3 un sistema para aprovechar mejor el material. Luego se midi\u00f3 el impacto para ver si realmente se lograba una mejora. Resultados Despu\u00e9s de aplicar los cambios, la productividad aument\u00f3 bastante (por ejemplo, en una estaci\u00f3n se logr\u00f3 subir hasta un 56%). Adem\u00e1s, se redujeron los desperdicios y se not\u00f3 un flujo de trabajo m\u00e1s balanceado. Conclusiones Al final se comprob\u00f3 que las t\u00e9cnicas de ingenier\u00eda de m\u00e9todos s\u00ed funcionan para este tipo de problemas. La empresa puede ser mucho m\u00e1s eficiente si mantiene estas pr\u00e1cticas y si el personal est\u00e1 consciente y participa en los ajustes. Tambi\u00e9n se remarca que es clave dar seguimiento para que las mejoras no se pierdan con el tiempo."},{"location":"Modulo_1/Actividad_3/","title":"Actividad 3: Ficha de an\u00e1lisis inicial del proyecto de investigaci\u00f3n","text":"<p>Tarea: Completar de manera individual la ficha de an\u00e1lisis inicial del proyecto de investigaci\u00f3n </p> <p>Table 1. Ficha de an\u00e1lisis inicial</p> Etapa Descripci\u00f3n Tema general Transformaci\u00f3n de tractores convencionales en tractores inteligentes mediante sistemas mecatr\u00f3nicos de control y geolocalizaci\u00f3n de alta precisi\u00f3n. Necesidad, situaci\u00f3n o contexto observado En la regi\u00f3n de Puebla, gran parte del campo sigue operando con maquinaria agr\u00edcola tradicional que no aprovecha tecnolog\u00edas modernas de automatizaci\u00f3n. Esto genera uso ineficiente de tiempo, mayores costos de operaci\u00f3n y menor competitividad frente a modelos de agricultura inteligente. Existe la necesidad de optimizar la maquinaria existente para mejorar productividad sin requerir la compra de tractores totalmente nuevos. Problema delimitado (en forma de pregunta) \u00bfC\u00f3mo se puede adaptar un tractor convencional con un sistema mecatr\u00f3nico que controle pedales y volante, incorporando geolocalizaci\u00f3n y sensores de percepci\u00f3n, para optimizar el uso de la maquinaria agr\u00edcola en Puebla? \u00bfPor qu\u00e9 es relevante (cient\u00edfica, t\u00e9cnica y socialmente)? Cient\u00edfica: Aporta conocimiento sobre la integraci\u00f3n de sistemas de percepci\u00f3n y control en maquinaria ya existente. T\u00e9cnica: Valida soluciones de retrofit que combinan geolocalizaci\u00f3n, mecatr\u00f3nica y visi\u00f3n por computadora, reduciendo costos de adopci\u00f3n tecnol\u00f3gica. Social: Moderniza la agricultura en comunidades de Puebla, aumentando la eficiencia productiva y el acceso a tecnolog\u00edas sin necesidad de grandes inversiones. Variables que podr\u00edan medirse o analizarse - Precisi\u00f3n del guiado con geolocalizaci\u00f3n (error en cm).- Tiempo de operaci\u00f3n en tareas agr\u00edcolas simuladas (eficiencia).- Capacidad de detecci\u00f3n de obst\u00e1culos mediante lidar y c\u00e1maras (n\u00famero de objetos identificados).- Costo estimado del sistema retrofit vs. tractor inteligente nuevo. \u00bfC\u00f3mo podr\u00edan validarse los resultados o el impacto del proyecto? - Simulaciones de trayectorias de guiado aut\u00f3nomo.- Pruebas en prototipos a peque\u00f1a escala.- Evaluaci\u00f3n de precisi\u00f3n de localizaci\u00f3n en entornos controlados.- Comparaci\u00f3n de m\u00e9tricas de eficiencia y precisi\u00f3n contra datos de maquinaria moderna."},{"location":"Modulo_1/Actividad_4/","title":"Actividad 5: Exploraci\u00f3n en las bases de datos acad\u00e9micas","text":"<p>Integrante del equipo: Oliver Ochoa Garc\u00eda</p> <p>Objetivo de aprendizaje: Identificar los tipos de recursos disponibles en las baces de datos de la biblioteca institucional.</p> <p>Instrucciones:  En esta actividad, trabajar\u00e1n en parejas para explorar las bases de datos acad\u00e9micas disponibles en la biblioteca institucional. El objetivo es identificar qu\u00e9 tipo de recursos se pueden encontrar en cada una (libros, art\u00edculos, revistas, tesis, noticias, etc.), as\u00ed como sus posibles aplicaciones en el trabajo docente y de investigaci\u00f3n.</p> <p>Tiempo estimado de la actividad 20 minutos.</p> <p>Pasos por seguir:</p> <ol> <li>Formar equipos de dos personas.</li> <li>Revisar las bases de datos listadas en esta actividad. Pueden acceder a ellas desde el portal de la biblioteca institucional.</li> <li>Elegir tres bases de datos para explorar a profundidad.</li> <li>Completar el formato de registro (tabla 1).</li> <li>Respondan las preguntas de reflexi\u00f3n que se encuentran al final del documento</li> <li>Compartir los hallazgos con el grupo y su reflexi\u00f3n final (m\u00e1ximo tres minutos).</li> </ol> <p>Table 1. Registro de exploraci\u00f3n en bases de datos acad\u00e9micas</p> Base de datos Tipo de recursos Descripci\u00f3n breve L\u00edneas o tem\u00e1tica EBSCO Art\u00edculos acad\u00e9micos, revistas, reportes Amplia cobertura multidisciplinaria, \u00fatil para encontrar art\u00edculos de divulgaci\u00f3n y papers revisados por pares. Educaci\u00f3n, tecnolog\u00eda, ciencias sociales, ingenier\u00edas. Ebook Central Libros electr\u00f3nicos Plataforma con una gran colecci\u00f3n de libros acad\u00e9micos en formato digital. Manuales de ingenier\u00eda, textos de dise\u00f1o, fundamentos de electr\u00f3nica y rob\u00f3tica. eLibro Libros, enciclopedias y manuales Orientado a bibliograf\u00eda en espa\u00f1ol con textos acad\u00e9micos. Ciencias aplicadas, ingenier\u00eda, administraci\u00f3n. Digitalia Hisp\u00e1nica Libros y revistas en espa\u00f1ol Fondo editorial principalmente en humanidades y ciencias sociales, pero tambi\u00e9n con t\u00edtulos t\u00e9cnicos. Historia, cultura, y materiales complementarios de tecnolog\u00eda. Future Snoops Noticias y reportes de tendencias Fuente de predicciones y an\u00e1lisis de tendencias en distintas \u00e1reas. Innovaci\u00f3n tecnol\u00f3gica, desarrollo de nuevos mercados. IEEE Xplore Art\u00edculos cient\u00edficos, conferencias, normas t\u00e9cnicas Especializado en ingenier\u00eda, computaci\u00f3n y tecnolog\u00eda. Esencial para mecatr\u00f3nica. Rob\u00f3tica, electr\u00f3nica, automatizaci\u00f3n, IA aplicada. Tirant lo Blanch Libros y art\u00edculos jur\u00eddicos Recurso especializado en derecho y legislaci\u00f3n. Normativa aplicable a patentes, propiedad intelectual en tecnolog\u00eda. Taylor and Francis Art\u00edculos de revistas acad\u00e9micas Editorial internacional con acceso a journals de diversas \u00e1reas. Ingenier\u00eda, f\u00edsica aplicada, educaci\u00f3n STEM. Springer Libros y journals cient\u00edficos Una de las editoriales m\u00e1s reconocidas a nivel acad\u00e9mico. Mecatr\u00f3nica, control, sistemas embebidos, matem\u00e1ticas aplicadas. PressReader Peri\u00f3dicos y revistas populares Fuente para revisar noticias, tendencias y temas de inter\u00e9s actual. Noticias globales, actualidad tecnol\u00f3gica y de innovaci\u00f3n. <p>Preguntas de reflexi\u00f3n</p> <ol> <li> <p>\u00bfQu\u00e9 base de datos consideras m\u00e1s \u00fatil para tu \u00e1rea de especialidad y por qu\u00e9?</p> <p>Considero que IEEE Xplore es la m\u00e1s \u00fatil, porque est\u00e1 especializada en ingenier\u00eda, rob\u00f3tica y electr\u00f3nica, que son el n\u00facleo de la mecatr\u00f3nica. Adem\u00e1s, permite acceder a papers actualizados y normas t\u00e9cnicas que puedo aplicar directamente en proyectos.</p> </li> <li> <p>\u00bfC\u00f3mo podr\u00edas integrar los recursos encontrados en tus clases o proyectos de investigaci\u00f3n?</p> <p>Podr\u00eda integrar art\u00edculos de IEEE y Springer como referencias en mis proyectos de rob\u00f3tica o sistemas embebidos, usar Ebook Central y eLibro como base te\u00f3rica para cursos, y consultar PressReader o Future Snoops para detectar tendencias tecnol\u00f3gicas que inspiren nuevos proyectos.</p> </li> </ol>"},{"location":"Modulo_2/Actividad_5/","title":"Actividad 7: Variables y dise\u00f1o experimental de tu proyecto","text":""},{"location":"Modulo_2/Actividad_5/#objetivos","title":"Objetivos","text":"<p>Objetivo del proyecto</p> <p>Desarrollar una simulaci\u00f3n en ROS2 y Gazebo sobre un sistema de c\u00f3mputo embebido (RPi5) que modele la adaptaci\u00f3n de un tractor convencional mediante un sistema mecatr\u00f3nico con control de pedales y volante, geolocalizaci\u00f3n RTK sint\u00e9tica y sensores virtuales (LiDAR y c\u00e1mara), con el fin de evaluar la precisi\u00f3n de guiado, eficiencia de percepci\u00f3n y tiempos de operaci\u00f3n en un entorno controlado.</p> <p>Objetivos espec\u00edficos</p> <ul> <li>Dise\u00f1ar un modelo URDF de tractor convencional que incorpore actuadores virtuales para volante y pedales.</li> <li>Integrar un sistema de geolocalizaci\u00f3n RTK sint\u00e9tico en la simulaci\u00f3n para obtener trayectorias centim\u00e9tricas.</li> <li>Configurar sensores virtuales de percepci\u00f3n (LiDAR y c\u00e1maras) para la detecci\u00f3n de obst\u00e1culos en Gazebo.</li> <li>Evaluar m\u00e9tricas de desempe\u00f1o como precisi\u00f3n de guiado, eficiencia de percepci\u00f3n y tiempos de operaci\u00f3n agr\u00edcola en escenarios simulados.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#variables-del-proyecto","title":"Variables del proyecto","text":"<p>Variables independientes</p> <ul> <li>Nivel de precisi\u00f3n o el ruido simulado del sistema RTK (Real-Time Kinematics).</li> <li>Resoluci\u00f3n de sistema LiDAR (Light Detection and Ranging).</li> <li>Resoluci\u00f3n y campo de visi\u00f3n de la c\u00e1mara virtual.</li> <li>Estrategia de control (PID, estado completo, difuso) mecatr\u00f3nico aplicada al modelo URDF (Unified Robot Description Format).</li> <li>Tipos de trayectorias en el entorno simulado (l\u00edneas rectas, curvas, trayectos predefinidos).</li> </ul> <p>Variables dependientes</p> <ul> <li>Precisi\u00f3n de guiado: error promedio en cent\u00edmetros respecto a la trayectoria planificada.</li> <li>Tiempo de operaci\u00f3n simulado: duraci\u00f3n (min/ha) para completar una tarea agr\u00edcola en Gazebo.</li> <li>Eficiencia de percepci\u00f3n: tasa de falsos positivos y falsos negativos.</li> <li>Estabilidad del control: frecuencia y amplitud de oscilaci\u00f3n o desviaci\u00f3n del tractor en la simulaci\u00f3n.</li> </ul> <p>Variables de control</p> <ul> <li>Plataforma de simulaci\u00f3n: ROS2 Humble Hawksbill + Gazebo sobre un RPi5.</li> <li>Modelo de tractor URDF (dimensiones y par\u00e1metros de masa, inercia y fricci\u00f3n fijos).</li> <li>Escenarios virtuales estandarizados (tipo de terreno plano, densidad de obst\u00e1culos).</li> <li>Condiciones de simulaci\u00f3n (misma frecuencia de actualizaci\u00f3n, par\u00e1metros de RTK).</li> </ul>"},{"location":"Modulo_2/Actividad_5/#diseno-de-experimento","title":"Dise\u00f1o de experimento","text":"<p>Con el fin de evaluar el desempe\u00f1o del sistema propuesto dentro de los alcances definidos para este curso (simulaci\u00f3n en ROS2 y Gazebo sobre un RPi5), dise\u00f1\u00e9 un experimento que me permite analizar c\u00f3mo influyen distintos factores en variables clave como la precisi\u00f3n de guiado, la eficiencia de percepci\u00f3n y la estabilidad del control.</p>"},{"location":"Modulo_2/Actividad_5/#1-enfoque-y-factores","title":"1) Enfoque y factores","text":"<p>El estudio se plantea como una comparaci\u00f3n de configuraciones mediante un dise\u00f1o factorial fraccionado. Para reducir la variabilidad asociada a los diferentes recorridos, se utilizar\u00e1n bloques definidos por el tipo de trayectoria. Adem\u00e1s, se realizar\u00e1n r\u00e9plicas con distintas semillas de aleatoriedad para garantizar robustez en los resultados.</p> <p>Los factores principales (variables independientes) y sus niveles son:</p> <ul> <li>Ruido en el sistema RTK (Real-Time Kinematics): {0.5, 2.0, 5.0 cm}.</li> <li>Resoluci\u00f3n del sensor LiDAR (Light Detection and Ranging): {0.5\u00b0, 0.25\u00b0}.</li> <li>C\u00e1mara virtual (resoluci\u00f3n y campo de visi\u00f3n): {640\u00d7480 px @ 60\u00b0, 1280\u00d7720 px @ 90\u00b0}.</li> <li>Estrategia de control: {PID (Proportional-Integral-Derivative), LQR (Linear Quadratic Regulator o control de estado completo), y Control Difuso}.</li> <li>Trayectoria (bloque): {recta larga, curvas en \u201cS\u201d, y vueltas en cabecera o headland}.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#2-respuestas-y-metricas","title":"2) Respuestas y m\u00e9tricas","text":"<p>Las variables dependientes a observar se definieron con las siguientes m\u00e9tricas:</p> <ul> <li>Precisi\u00f3n de guiado: error medio, RMSE (Root Mean Square Error) y percentil 95 (P95) respecto a la trayectoria planificada.</li> <li>Tiempo de operaci\u00f3n simulado: duraci\u00f3n en minutos por hect\u00e1rea (min/ha), normalizado por longitud de trayectoria.</li> <li>Eficiencia de percepci\u00f3n: tasa de falsos positivos (FPR, False Positive Rate) y falsos negativos (FNR, False Negative Rate) al detectar obst\u00e1culos.</li> <li>Estabilidad del control: sobreimpulso en porcentaje (%), amplitud y frecuencia dominante de las oscilaciones, calculadas mediante an\u00e1lisis FFT (Fast Fourier Transform o Transformada R\u00e1pida de Fourier).</li> </ul>"},{"location":"Modulo_2/Actividad_5/#3-variables-de-control","title":"3) Variables de control","text":"<p>Para que los resultados sean comparables, mantendr\u00e9 constantes las siguientes condiciones:</p> <ul> <li>Plataforma de simulaci\u00f3n: ROS2 y Gazebo sobre un RPi5 (misma versi\u00f3n en todas las corridas).</li> <li>Modelo URDF (Unified Robot Description Format) del tractor: dimensiones, masa, inercia y fricci\u00f3n fijas.</li> <li>Escenarios virtuales: terreno plano con obst\u00e1culos de densidad y geometr\u00eda est\u00e1ndar.</li> <li>Condiciones de simulaci\u00f3n: frecuencia de actualizaci\u00f3n y par\u00e1metros base de RTK invariables.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#4-plan-de-diseno-doe","title":"4) Plan de dise\u00f1o (DOE)","text":"<p>El dise\u00f1o experimental (DOE, Design of Experiments) sigui\u00f3 esta estrategia:</p> <ul> <li>Bloques: cada tipo de trayectoria (recta, S, headland) se analiza por separado.</li> <li>Factorial fraccionado: dentro de cada bloque se probar\u00e1n las combinaciones de LiDAR, C\u00e1mara, Ruido RTK y Estrategia de control, utilizando un arreglo reducido para optimizar el n\u00famero de corridas.</li> <li>Replicaci\u00f3n: se realizar\u00e1n 5 corridas por combinaci\u00f3n, variando las semillas aleatorias que controlan el ruido y la generaci\u00f3n de obst\u00e1culos.</li> <li>Aleatorizaci\u00f3n: el orden de ejecuci\u00f3n de las configuraciones se permutar\u00e1 dentro de cada bloque para evitar sesgos asociados al tiempo o condiciones del sistema.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#5-procedimiento-de-cada-corrida","title":"5) Procedimiento de cada corrida","text":"<p>Cada prueba seguir\u00e1 cuatro etapas:</p> <ol> <li>Inicializaci\u00f3n: carga del mundo virtual y del modelo URDF del tractor; definici\u00f3n de la semilla y par\u00e1metros de la corrida (RTK, LiDAR, c\u00e1mara, control).</li> <li>Ejecuci\u00f3n: el tractor recorre la trayectoria del bloque hasta completarla o hasta alcanzar un tiempo m\u00e1ximo definido.</li> <li>Registro: se guardan los datos de navegaci\u00f3n y percepci\u00f3n mediante rosbag2 (t\u00f3picos /tf, /odom, sensores y comandos de control), junto con logs de semilla y par\u00e1metros.</li> <li>Postproceso: se calculan las m\u00e9tricas (error, RMSE, P95, min/ha, FPR/FNR, estabilidad) y se exportan los resultados en CSV para an\u00e1lisis posterior.</li> </ol>"},{"location":"Modulo_2/Actividad_5/#6-analisis-estadistico","title":"6) An\u00e1lisis estad\u00edstico","text":"<p>El an\u00e1lisis se realizar\u00e1 en las siguientes etapas:</p> <ul> <li>ANOVA (An\u00e1lisis de Varianza): para efectos fijos dentro de cada bloque, identificando factores principales e interacciones clave (ruido RTK, LiDAR, c\u00e1mara, control).</li> <li>Modelo mixto: considerando la trayectoria como efecto aleatorio, con el fin de estimar efectos generales.</li> <li>Comparaciones post-hoc: pruebas de Tukey HSD (Honestly Significant Difference) para comparar estrategias de control (PID, LQR y Difuso).</li> <li>Tama\u00f1o de efecto: mediante \u03b7\u00b2 parcial y Cohen\u2019s d, para priorizar qu\u00e9 factores influyen m\u00e1s.</li> <li>Verificaci\u00f3n de supuestos: revisi\u00f3n de normalidad de residuos y homocedasticidad para validar los modelos.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#7-criterios-de-aceptacion","title":"7) Criterios de aceptaci\u00f3n","text":"<p>Finalmente, se establecieron umbrales de desempe\u00f1o para evaluar el \u00e9xito del sistema:</p> <ul> <li>Precisi\u00f3n de guiado: RMSE \u2264 3 cm con RTK de 0.5\u20132.0 cm; RMSE \u2264 7 cm con RTK de 5.0 cm.</li> <li>Percepci\u00f3n: FNR \u2264 5 % y FPR \u2264 10 % en detecci\u00f3n de obst\u00e1culos.</li> <li>Tiempo de operaci\u00f3n: no superar +10 % respecto al escenario base (PID + RTK con ruido m\u00ednimo).</li> <li>Estabilidad del control: evitar oscilaciones sostenidas mayores a 0.3 Hz y sobreimpulso superior al 15 % en cambios de rumbo.</li> </ul>"},{"location":"Modulo_2/Actividad_5/#nota-sobre-trazabilidad-y-validacion-previa","title":"Nota sobre trazabilidad y validaci\u00f3n previa","text":"<p>Para asegurar reproducibilidad, cada corrida registr\u00f3:</p> <ul> <li>Semilla aleatoria y hash de commit en los resultados exportados.</li> <li>Versi\u00f3n fija de ROS2 y Gazebo.</li> <li>Script \u00fanico de lanzamiento con par\u00e1metros configurables.</li> </ul> <p>Adem\u00e1s, antes de correr el dise\u00f1o completo, se realizar\u00e1 un pilotaje reducido (trayectoria recta, 2\u00d72\u00d72\u00d72 combinaciones, n=3 r\u00e9plicas) para verificar la correcta captura de m\u00e9tricas y la viabilidad en tiempos de simulaci\u00f3n.</p> <p>Este dise\u00f1o es preliminar y puede ajustarse seg\u00fan avances en la implementaci\u00f3n, tiempos de desarrollo o descubrimientos durante el pilotaje. El objetivo es contar con un plan estructurado que gu\u00ede las pruebas y permita evaluar el desempe\u00f1o del sistema propuesto dentro de los alcances definidos.</p>"},{"location":"Modulo_2/Actividad_6/","title":"Actividad 8: Estrategias de simulaci\u00f3n y recolecci\u00f3n de datos","text":"<p>\u00bfEs pertinente realizar una simulaci\u00f3n? \u00bfPor qu\u00e9?</p> <p>S\u00ed, es totalmente pertinente porque la simulaci\u00f3n es el eje central del proyecto. A trav\u00e9s de ella puedo evaluar el desempe\u00f1o de diferentes configuraciones sin necesidad de implementar f\u00edsicamente todos los escenarios. Esto me permite validar hip\u00f3tesis, optimizar par\u00e1metros y obtener resultados reproducibles de manera m\u00e1s eficiente.</p> <p>En caso de ser afirmativa la respuesta: \u00bfcu\u00e1l ser\u00eda el objetivo de esa simulaci\u00f3n?</p> <p>El objetivo es aplicar el dise\u00f1o de experimentos (DOE) para comparar configuraciones bajo distintas combinaciones de factores, medir m\u00e9tricas de desempe\u00f1o y analizar la influencia de cada variable en los resultados. La simulaci\u00f3n servir\u00e1 como un \u201claboratorio virtual\u201d donde se pueden ejecutar pruebas controladas y obtener datos consistentes para sustentar conclusiones.</p> <p>\u00bfQu\u00e9 herramienta te puede ayudar a completar la investigaci\u00f3n?</p> <p>Puedo utilizar ROS2 con Gazebo para las simulaciones, ya que me permite modelar sistemas rob\u00f3ticos y replicar escenarios realistas. Adem\u00e1s, usar\u00e9 scripts en Python y notebooks para postprocesar los datos, junto con gestores de referencias (Zotero/Mendeley) para sostener el an\u00e1lisis con literatura cient\u00edfica.</p> <p>Desarrolla una nueva estrategia para recolectar datos.</p> <p>La estrategia se basar\u00e1 en el DOE ya planteado:</p> <ul> <li>Definir factores y niveles (por ejemplo: ruido RTK, par\u00e1metros de control, condiciones de trayectoria).</li> <li>Correr simulaciones por bloques siguiendo el dise\u00f1o factorial fraccionado, con r\u00e9plicas para cada combinaci\u00f3n.</li> <li>Documentar seeds y par\u00e1metros en plantillas YAML versionadas en Git, asegurando trazabilidad.</li> <li>Recolectar m\u00e9tricas autom\u00e1ticamente (tiempo, precisi\u00f3n, estabilidad, consumo de recursos) mediante scripts de postproceso.</li> <li>Consolidar y analizar los datos en tablas y gr\u00e1ficas, aplicando estad\u00edstica b\u00e1sica para identificar efectos significativos.</li> </ul>"},{"location":"Modulo_2/Actividad_7/","title":"Actividad 9: Tabla ideal de recolecci\u00f3n de datos","text":""},{"location":"Modulo_2/Actividad_7/#parte-1-pregunta-de-investigacion","title":"Parte 1. Pregunta de investigaci\u00f3n","text":"<p>La pregunta de investigaci\u00f3n que guiar\u00e1 mi trabajo es:</p> <p>\u00bfC\u00f3mo influyen el nivel de ruido en el RTK y la estrategia de control (PID, LQR, Difuso) sobre la precisi\u00f3n de guiado y la estabilidad del tractor en simulaci\u00f3n, considerando el tipo de trayectoria como bloque de an\u00e1lisis?</p> <p>Esta pregunta es espec\u00edfica, medible y se ajusta a los datos que puedo obtener dentro de la simulaci\u00f3n en ROS2 y Gazebo.</p>"},{"location":"Modulo_2/Actividad_7/#parte-2-tabla-ideal-de-recoleccion-de-datos","title":"Parte 2. Tabla ideal de recolecci\u00f3n de datos","text":"<p>La siguiente tabla re\u00fane las variables que considero m\u00e1s importantes para mi investigaci\u00f3n. Incluyo variables de identificaci\u00f3n (simulaci\u00f3n, seed, hash), independientes (RTK, control, LiDAR, c\u00e1mara, trayectoria) y dependientes (error, estabilidad, percepci\u00f3n, tiempos).</p> Variable Sim_01 Sim_02 Trayectoria (bloque) Recta Curva en \u201cS\u201d Ruido RTK (cm) 0.5 2.0 Estrategia de control PID LQR Resoluci\u00f3n LiDAR 0.5\u00b0 0.25\u00b0 C\u00e1mara (res/FOV) 640\u00d7480 @ 60\u00b0 1280\u00d7720 @ 90\u00b0 Error medio (cm) 2.5 \u2026 RMSE (cm) 3.1 \u2026 P95 (cm) 4.8 \u2026 Sobreimpulso (%) 8 \u2026 Frec. oscilaci\u00f3n (Hz) 0.15 \u2026 Tiempo (min/ha) 12.1 \u2026 FPR (%) 4 \u2026 FNR (%) 3 \u2026 Seed corrida 12345 \u2026 Hash commit abc123 \u2026"},{"location":"Modulo_2/Actividad_7/#parte-3-analisis-critico-y-reflexion","title":"Parte 3. An\u00e1lisis cr\u00edtico y reflexi\u00f3n","text":""},{"location":"Modulo_2/Actividad_7/#1-variables-que-decidi-excluir","title":"1. Variables que decid\u00ed excluir","text":"<ul> <li>Costo del retrofit: en esta fase de simulaci\u00f3n no tiene relevancia, ser\u00eda m\u00e1s \u00fatil en la etapa de prototipo f\u00edsico.  </li> <li>Condiciones ambientales reales (lluvia, polvo, vibraci\u00f3n): Gazebo no modela estas condiciones, as\u00ed que quedan fuera del alcance inmediato.  </li> <li>Fatiga del operador humano: como el tractor se controla de manera virtual, esta variable no aplica.  </li> </ul>"},{"location":"Modulo_2/Actividad_7/#2-criterios-para-conservar-variables","title":"2. Criterios para conservar variables","text":"<p>Me qued\u00e9 con las variables que realmente responden a la pregunta de investigaci\u00f3n. Adem\u00e1s, busqu\u00e9 que fueran f\u00e1ciles de medir autom\u00e1ticamente dentro de ROS2 (rosbag, t\u00f3picos) y que tuvieran un impacto directo en la validaci\u00f3n de mi hip\u00f3tesis.</p>"},{"location":"Modulo_2/Actividad_7/#3-cambios-que-haria-si-repitiera-la-actividad","title":"3. Cambios que har\u00eda si repitiera la actividad","text":"<p>Si tuviera oportunidad de repetir la actividad, incluir\u00eda terrenos irregulares en la simulaci\u00f3n para mayor realismo, m\u00e1s niveles de ruido en el RTK para analizar no linealidades y tambi\u00e9n incorporar\u00eda una m\u00e9trica de consumo energ\u00e9tico simulado como parte de la evaluaci\u00f3n.</p>"},{"location":"Modulo_2/Actividad_7/#4-mecanismos-de-verificacion-y-control-de-calidad","title":"4. Mecanismos de verificaci\u00f3n y control de calidad","text":"<p>Para asegurar la trazabilidad de mis datos, mantendr\u00eda semillas fijas y hash de commit en cada corrida, usar\u00eda scripts de lanzamiento con par\u00e1metros estandarizados y validar\u00eda el flujo con corridas piloto antes de lanzar el DOE completo.</p>"},{"location":"Modulo_2/Actividad_7/#5-aplicacion-pedagogica","title":"5. Aplicaci\u00f3n pedag\u00f3gica","text":"<p>Con mis estudiantes aplicar\u00eda este mismo enfoque en proyectos m\u00e1s peque\u00f1os, por ejemplo con robots m\u00f3viles. Me interesa que ellos definan variables, construyan sus tablas y justifiquen qu\u00e9 conservan o qu\u00e9 excluyen. Un ejemplo sencillo ser\u00eda preguntar: \u201c\u00bfC\u00f3mo afecta la velocidad del robot a la precisi\u00f3n de detecci\u00f3n de obst\u00e1culos?\u201d. As\u00ed puedo evaluar su aprendizaje a partir de tablas reproducibles y reflexiones metodol\u00f3gicas bien fundamentadas.</p>"},{"location":"Proyecto_Agricola/Tema_1/","title":"Planeaci\u00f3n General del Proyecto","text":""},{"location":"Proyecto_Agricola/Tema_1/#fases-del-proyecto","title":"Fases del proyecto","text":""},{"location":"Proyecto_Agricola/Tema_1/#fase-1-simulacion-y-validacion-mvp-en-ros2-gazebo","title":"Fase 1 \u2013 Simulaci\u00f3n y validaci\u00f3n (MVP en ROS2 + Gazebo)","text":"<ul> <li>Instalar entorno en RPi5 con ROS2 Humble y Gazebo.</li> <li>Crear modelo URDF/Xacro del tractor con pedales y volante.</li> <li>Integrar RTK sint\u00e9tico, LiDAR y c\u00e1mara virtual.</li> <li>Implementar controladores b\u00e1sicos (PID) y adaptativos.</li> <li>Correr DOE piloto y completo (trayectorias recta, S, headland).</li> <li>M\u00e9tricas: error guiado, tiempo, percepci\u00f3n, estabilidad.</li> </ul>"},{"location":"Proyecto_Agricola/Tema_1/#fase-2-prototipo-a-baja-escala","title":"Fase 2 \u2013 Prototipo a baja escala","text":"<ul> <li>Construcci\u00f3n de un mini-tractor a escala 1:10 o 1:8 con actuadores para pedales y direcci\u00f3n.</li> <li>Integraci\u00f3n de GNSS RTK real (por ejemplo, m\u00f3dulo u-blox F9P).</li> <li>Uso de LiDAR de bajo costo (RPLidar A1/A2) y c\u00e1mara RGB.</li> <li>Implementaci\u00f3n de control en ROS2 sobre RPi5 u otra SBC.</li> <li>Validaci\u00f3n experimental en pista controlada.</li> </ul>"},{"location":"Proyecto_Agricola/Tema_1/#fase-3-retrofit-en-tractor-convencional","title":"Fase 3 \u2013 Retrofit en tractor convencional","text":"<ul> <li>Selecci\u00f3n de un tractor de uso com\u00fan en Puebla.</li> <li>Dise\u00f1o de kits de actuadores para volante y pedales (modulares, reversibles).</li> <li>Integraci\u00f3n del stack ROS2 con sensores reales (RTK, LiDAR, c\u00e1mara).</li> <li>Pruebas en campo con trayectorias sencillas (recta, headland).</li> <li>Comparaci\u00f3n frente a operaci\u00f3n manual.</li> </ul>"},{"location":"Proyecto_Agricola/Tema_1/#fase-4-optimizacion-y-escalamiento","title":"Fase 4 \u2013 Optimizaci\u00f3n y escalamiento","text":"<ul> <li>Optimizar estrategias de control (LQR, difuso, h\u00edbridos).</li> <li>Validar robustez en condiciones reales: polvo, vibraci\u00f3n, oclusiones.</li> <li>An\u00e1lisis econ\u00f3mico: costo del retrofit vs. tractor inteligente nuevo.</li> <li>Plan de adopci\u00f3n con peque\u00f1os productores \u2192 impacto social.</li> </ul>"},{"location":"Proyecto_Agricola/Tema_1/#fase-5-transferencia-y-servicio-social","title":"Fase 5 \u2013 Transferencia y servicio social","text":"<ul> <li>Documentaci\u00f3n y manual de implementaci\u00f3n open source.</li> <li>Talleres de capacitaci\u00f3n a agricultores y estudiantes.</li> <li>Escalamiento a diferentes cultivos y terrenos.</li> <li>Conexi\u00f3n con programas de apoyo gubernamental o cooperativas rurales.</li> </ul>"},{"location":"Proyecto_Agricola/Tema_1/#roadmap-general","title":"Roadmap General","text":"<pre><code>gantt\n    title Roadmap Proyecto Tractores Inteligentes\n    dateFormat  YYYY-MM\n    axisFormat  %b %Y\n\n    section Fase 1 - Simulaci\u00f3n (MVP)\n    Revisi\u00f3n bibliogr\u00e1fica y DOE       :done, des1, 2025-09, 2025-10\n    Entorno ROS2 + Gazebo en RPi5      :active, des2, 2025-09, 2025-10\n    URDF + control PID                 :des3, 2025-10, 2025-11\n    Sensores virtuales (RTK, LiDAR, c\u00e1mara) :des4, 2025-10, 2025-11\n    Ejecuci\u00f3n DOE + an\u00e1lisis            :des5, 2025-11, 2025-12\n    Informe y validaci\u00f3n MVP            :milestone, des6, 2025-12, 1d\n\n    section Fase 2 - Prototipo a baja escala\n    Dise\u00f1o mini-tractor (1:10 \u2013 1:8)    :des7, 2026-01, 2026-02\n    Integraci\u00f3n sensores reales (RTK, LiDAR, c\u00e1mara) :des8, 2026-02, 2026-03\n    Implementaci\u00f3n control en ROS2      :des9, 2026-03, 2026-04\n    Pruebas controladas en pista        :des10, 2026-04, 2026-05\n\n    section Fase 3 - Retrofit tractor real\n    Selecci\u00f3n tractor y actuadores      :des11, 2026-06, 2026-07\n    Integraci\u00f3n stack ROS2 completo     :des12, 2026-07, 2026-08\n    Pruebas en campo (recta, headland)  :des13, 2026-09, 2026-10\n\n    section Fase 4 - Optimizaci\u00f3n y escalamiento\n    Estrategias avanzadas de control    :des14, 2026-11, 2027-01\n    Validaci\u00f3n robusta en campo         :des15, 2027-02, 2027-04\n    An\u00e1lisis econ\u00f3mico y social         :des16, 2027-04, 2027-05\n\n    section Fase 5 - Transferencia y servicio social\n    Documentaci\u00f3n open-source           :des17, 2027-06, 2027-07\n    Talleres y capacitaci\u00f3n             :des18, 2027-07, 2027-08\n    Escalamiento con productores        :des19, 2027-09, 2027-12</code></pre>"},{"location":"Proyecto_Agricola/Tema_2/","title":"Fase 1: Simulaci\u00f3n y Validaci\u00f3n (ROS 2 + Gazebo)","text":""},{"location":"Proyecto_Agricola/Tema_2/#entregable-fase-1-simulacion-en-wsl2-ros-2-jazzy-gazebo-harmonic","title":"Entregable \u2014 Fase 1: Simulaci\u00f3n en WSL2 (ROS\u00a02 Jazzy + Gazebo Harmonic)","text":"<p>Contexto: La simulaci\u00f3n se realizar\u00e1 en Windows 10/11 usando WSL2 (Ubuntu 22.04/24.04) con WSLg para interfaces gr\u00e1ficas. No se requiere Raspberry\u00a0Pi en esta fase. Se asume que el hardware del alumno tiene soporte para OpenGL 3.3 v\u00eda WSLg (o se usa modo headless con visualizaci\u00f3n remota).</p>"},{"location":"Proyecto_Agricola/Tema_2/#1-preparacion-de-windows-wsl2","title":"\ud83d\udd39 1. Preparaci\u00f3n de Windows + WSL2","text":"<p>Meta: Contar con un ambiente WSL2 funcional (Ubuntu) con soporte gr\u00e1fico (WSLg) para ejecutar RViz/Gazebo y herramientas ROS\u00a02.</p> <p>Checklist:</p> <ul> <li> Habilitar WSL2 y Plataforma de M\u00e1quina Virtual en Windows.</li> <li> Instalar Ubuntu desde Microsoft Store (22.04 o 24.04).</li> <li> Actualizar sistema: <code>sudo apt update &amp;&amp; sudo apt upgrade -y</code>.</li> <li> Verificar WSLg (GUI): ejecutar <code>xclock</code> o cualquier app GUI de ejemplo.</li> <li> Limitar recursos si hace falta: crear/ajustar <code>C:\\\\Users\\\\&lt;usuario&gt;\\\\.wslconfig</code> (memoria, procesadores).</li> </ul> <p>Criterio de aceptaci\u00f3n: Aplicaci\u00f3n GUI simple abre desde WSL (WSLg) y el entorno Ubuntu est\u00e1 actualizado.</p>"},{"location":"Proyecto_Agricola/Tema_2/#2-instalacion-base-ros-2-jazzy-gazebo-harmonic","title":"\ud83d\udd39 2. Instalaci\u00f3n base (ROS\u00a02 Jazzy + Gazebo Harmonic)","text":"<p>Meta: Disponer de ROS\u00a02 Jazzy y Gazebo Harmonic instalados en WSL2, con utilidades esenciales de desarrollo.</p> <p>Checklist:</p> <ul> <li> Instalar ROS\u00a02 Jazzy Jalisco (desktop) con <code>ros-dev-tools</code>.</li> <li> Instalar Gazebo Harmonic con sus plugins b\u00e1sicos.</li> <li> Instalar herramientas: <code>git</code>, <code>python3-pip</code>, <code>colcon</code>, <code>rosdep</code>.</li> <li> Inicializar <code>rosdep</code> y resolver dependencias del sistema.</li> <li> Verificar OpenGL 3.3: <code>glxinfo | grep \"OpenGL version\"</code> o ejecutar <code>gz gui</code> de prueba.</li> <li> (Fallback) Preparar modo headless: <code>gz sim -s</code> + uso de Foxglove Studio o RViz en \u201cbridge\u201d.</li> </ul> <p>Criterio de aceptaci\u00f3n: <code>rviz2</code> y <code>gz gui</code> abren en WSLg sin errores cr\u00edticos o se confirma ejecuci\u00f3n headless estable por \u226560\u00a0s.</p>"},{"location":"Proyecto_Agricola/Tema_2/#3-repositorio-y-workspace","title":"\ud83d\udd39 3. Repositorio y workspace","text":"<p>Meta: Estructurar el proyecto en un workspace reproducible y modular.</p> <p>Checklist:</p> <ul> <li> Crear workspace <code>~/ros2_ws/src/</code>.</li> <li> Inicializar repositorio (rama <code>main</code> y <code>dev</code>).</li> <li> Crear paquetes:  </li> <li><code>tractor_description/</code> (URDF/Xacro, meshes)  </li> <li><code>tractor_control/</code> (control longitudinal/lateral + PID/Pure\u00a0Pursuit)  </li> <li><code>tractor_sensors/</code> (configs RTK sint\u00e9tico, LiDAR, c\u00e1mara)  </li> <li><code>tractor_bringup/</code> (launch, params YAML, worlds)  </li> <li><code>tractor_experiments/</code> (DOE, lanzadores por lote)  </li> <li><code>tractor_analysis/</code> (m\u00e9tricas, plots)  </li> <li> Compilar con <code>colcon build</code> y source correcto (<code>. install/setup.bash</code>).</li> </ul> <p>Criterio de aceptaci\u00f3n: <code>colcon build</code> sin errores y <code>ros2 launch tractor_bringup demo_world.launch.py</code> levanta un stack m\u00ednimo.</p>"},{"location":"Proyecto_Agricola/Tema_2/#4-modelado-urdfxacro-ros2_control","title":"\ud83d\udd39 4. Modelado (URDF/Xacro + ros2_control)","text":"<p>Meta: Contar con un modelo URDF compatible con <code>ros2_control</code> y TF coherente.</p> <p>Checklist:</p> <ul> <li> URDF base (chasis, ruedas, volante, pedales).</li> <li> TF: <code>map \u2192 odom \u2192 base_link \u2192 base_footprint</code>, <code>camera_link</code>, <code>lidar_link</code>.</li> <li> Validaci\u00f3n con <code>check_urdf</code> y visualizaci\u00f3n en RViz.</li> <li> Configuraci\u00f3n inicial de <code>ros2_control</code> (interfaces simuladas de direcci\u00f3n y tracci\u00f3n).</li> </ul> <p>Criterio de aceptaci\u00f3n: <code>check_urdf</code> sin errores y TF visible en RViz con jerarqu\u00eda correcta.</p>"},{"location":"Proyecto_Agricola/Tema_2/#5-control-seguimiento-pid","title":"\ud83d\udd39 5. Control (seguimiento + PID)","text":"<p>Meta: Implementar control longitudinal (velocidad) y lateral (direcci\u00f3n) para recorrer trayectorias.</p> <p>Checklist:</p> <ul> <li> Control longitudinal PID (1\u20132\u00a0m/s, anti\u2011windup).</li> <li> Control lateral Pure\u00a0Pursuit o Stanley con <code>nav_msgs/Path</code>.</li> <li> Launch integrado: <code>sim_world</code>, <code>sensor_profile</code>, <code>controller</code> y <code>seed</code> como args.</li> <li> Prueba en recta: seguimiento estable.</li> </ul> <p>Criterio de aceptaci\u00f3n: Recta de 10\u00a0m con error lateral &lt; 10\u00a0cm en RTK de bajo ruido.</p>"},{"location":"Proyecto_Agricola/Tema_2/#6-sensores-virtuales-rtk-lidar-camara","title":"\ud83d\udd39 6. Sensores virtuales (RTK, LiDAR, c\u00e1mara)","text":"<p>Meta: Simular percepci\u00f3n y posicionamiento con perfiles configurables.</p> <p>Checklist:</p> <ul> <li> RTK sint\u00e9tico con ruido {0.5, 2, 5\u00a0cm}; publicar <code>/rtk_fix</code> y pose con covarianzas.</li> <li> LiDAR\u00a02D (FOV, range, resoluciones {0.5\u00b0,\u00a00.25\u00b0}).</li> <li> C\u00e1mara RGB (perfiles: 640\u00d7480@60\u00b0, 1280\u00d7720@90\u00b0) con <code>camera_info</code>.</li> <li> Archivos YAML por perfil y argumentos en launch.</li> </ul> <p>Criterio de aceptaci\u00f3n: Publicaci\u00f3n estable de <code>/rtk_fix</code>, <code>/scan</code> y <code>/image_raw</code> durante \u226560\u00a0s sin ca\u00eddas (&gt;90% msgs).</p>"},{"location":"Proyecto_Agricola/Tema_2/#7-escenarios-y-trayectorias","title":"\ud83d\udd39 7. Escenarios y trayectorias","text":"<p>Meta: Proveer mundos y rutas objetivo para pruebas (recta, S, headland).</p> <p>Checklist:</p> <ul> <li> <code>recta.world</code>, <code>s_curve.world</code>, <code>headland.world</code> en Gazebo.</li> <li> Waypoints (CSV) o <code>nav_msgs/Path</code> generados por script.</li> <li> Spawn y alineaci\u00f3n inicial correctos.</li> </ul> <p>Criterio de aceptaci\u00f3n: El veh\u00edculo completa las tres trayectorias planificadas sin colisiones ni desbordes del mapa.</p>"},{"location":"Proyecto_Agricola/Tema_2/#8-doe-y-automatizacion","title":"\ud83d\udd39 8. DOE y automatizaci\u00f3n","text":"<p>Meta: Ejecutar barridos sistem\u00e1ticos con semillas y registro estandarizado.</p> <p>Checklist:</p> <ul> <li> <code>plan.csv</code> con factores: RTK_noise {0.5,\u00a02,\u00a05\u00a0cm}, LiDAR_res {0.5\u00b0,\u00a00.25\u00b0}, Cam {640\u00d7480@60\u00b0,\u00a01280\u00d7720@90\u00b0}, Control {PID}, Bloque {recta,\u00a0S,\u00a0headland}, r\u00e9plicas n=3\u20135.</li> <li> Script batch: levanta sim, fija <code>seed</code>, corre T m\u00e1x o \u201chasta terminar path\u201d.</li> <li> Grabar rosbag2 (t\u00f3picos m\u00ednimos) con convenci\u00f3n <code>results/run_###/</code> y <code>meta.json</code>.</li> <li> Health\u2011check previo (CPU, RAM, disco).</li> </ul> <p>Criterio de aceptaci\u00f3n: Ejecuci\u00f3n completa de \u22651 bloque del DOE y generaci\u00f3n de carpetas <code>results/run_###/</code> v\u00e1lidas.</p>"},{"location":"Proyecto_Agricola/Tema_2/#9-metricas-y-analisis","title":"\ud83d\udd39 9. M\u00e9tricas y an\u00e1lisis","text":"<p>Meta: Producir m\u00e9tricas comparables y gr\u00e1ficas base para informe.</p> <p>Checklist:</p> <ul> <li> Extraer <code>/odom</code>, <code>/rtk_fix</code>, <code>/scan</code> (+ comandos de control si aplica).</li> <li> Calcular RMSE y P95 de guiado, min/ha, FNR/FPR (o proxy), FFT de error lateral y sobreimpulso.</li> <li> Guardar <code>metrics.csv</code> por corrida y <code>summary.csv</code> consolidado.</li> <li> Graficar boxplots y comparativas (Matplotlib).</li> </ul> <p>Criterio de aceptaci\u00f3n: <code>summary.csv</code> consolidado + al menos 3 figuras: (i) boxplot RMSE, (ii) barras FNR/FPR, (iii) curva error vs. distancia.</p>"},{"location":"Proyecto_Agricola/Tema_2/#10-documentacion-y-entregable","title":"\ud83d\udd39 10. Documentaci\u00f3n y entregable","text":"<p>Meta: Entregar informe reproducible con resultados y gu\u00edas de ejecuci\u00f3n.</p> <p>Checklist:</p> <ul> <li> Informe: descripci\u00f3n, setup WSL2, configuraci\u00f3n, DOE, resultados, gr\u00e1ficas.</li> <li> README con pasos \u201cclonar\u2011construir\u2011ejecutar\u201d en WSL2 (&lt;30\u00a0min).</li> <li> Versionado en <code>/docs</code> del repo.</li> </ul> <p>Criterio de aceptaci\u00f3n: Informe con 3\u20135 gr\u00e1ficas, <code>summary.csv</code>, y README reproducible.</p>"},{"location":"Proyecto_Agricola/Tema_2/#notas-operativas-performance-y-compatibilidad","title":"Notas operativas (performance y compatibilidad)","text":"<ul> <li>Si WSLg no soporta la GPU/driver, usar headless (<code>gz sim -s</code>) y visualizar con Foxglove Studio desde Windows.</li> <li>Cerrar otras distros WSL: <code>wsl --shutdown</code> antes de corridas largas.</li> <li>Ajustar <code>.wslconfig</code> para evitar swapping (memoria suficiente y <code>swap=0</code> si el equipo lo permite).</li> <li>En port\u00e1tiles sin dGPU, priorizar resoluciones de c\u00e1mara bajas y LiDAR\u00a02D.</li> </ul>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/","title":"ROS 2 Jazzy Mobile Robot on WSL2 with Gazebo Harmonic","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#1-install-ros","title":"1. Install ROS","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#11-instalar-wsl2-y-ubuntu-2404","title":"1.1 Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo: Omite este paso completo (instalaci\u00f3n de WSL2 y Ubuntu).</li> <li>Si est\u00e1s en Windows 11: Sigue todos los pasos.</li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre PowerShell como administrador:</p> <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> <p>Este comando: - Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de m\u00e1quina virtual. - Configura WSL2 como la versi\u00f3n por defecto. - Descarga e instala Ubuntu 24.04 LTS (Noble Numbat).</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#12-primer-arranque-y-actualizacion-del-sistema","title":"1.2 Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> <p>Esto actualizar\u00e1 tu Ubuntu.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#13-configuracion-del-sistema-para-ros-2","title":"1.3 Configuraci\u00f3n del sistema para ROS 2","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#131-configurar-el-locale-utf-8","title":"1.3.1 Configurar el locale (UTF-8)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza\u00a0UTF-8. Evitando problemas con caracteres especiales en ROS y otros programas.</p> <pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> <p>Verifica con:</p> <p><pre><code>locale # Verificamos que sea UTF-8\n</code></pre> Debe mostrar UTF-8.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#132-habilitar-universe-y-anadir-repositorio-de-ros-2","title":"1.3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de\u00a0Ubuntu Universe \u00a0este habilitado.</p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave\u00a0GPG\u00a0ROS 2 con\u00a0apt.</p> <p><pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key   | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg]   http://packages.ros.org/ros2/ubuntu   $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\"   | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#2-instalar-ros-2-jazzy-desktop","title":"2. Instalar ROS 2 Jazzy Desktop","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#21-instalacion-del-paquete-desktop","title":"2.1 Instalaci\u00f3n del paquete Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimo</p> <p><pre><code>sudo apt update\nsudo apt upgrade -y\n</code></pre> Luego instala el paquete <code>ros-jazzy-desktop</code> que incluye la mayor\u00eda de las herramientas necesarias para trabajar con ROS 2 y Gazebo.</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#22-configuracion-del-entorno","title":"2.2 Configuraci\u00f3n del entorno","text":"<p>Configuraremos el entorno, a\u00f1ade al archivo de inicio (~/.bashrc) la carga autom\u00e1tica de los comandos de ROS cada vez que abres la terminal.</p> <pre><code>echo \"source /opt/ros/jazzy/setup.bash\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#23-prueba-con-nodos-de-ejemplo","title":"2.3 Prueba con nodos de ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal. En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>ros2 run demo_nodes_cpp talker\n</code></pre> <pre><code>ros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola,\u00a0Publishing: numbers\u00a0y en la consola on listener se imprime\u00a0I heard: numbers\u00a0coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#3-dependencias-utiles","title":"3. Dependencias \u00fatiles","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#31-instalacion","title":"3.1 Instalaci\u00f3n","text":"<pre><code>sudo apt install ros-jazzy-robot-state-publisher ros-jazzy-joint-state-publisher-gui\nsudo apt install ros-jazzy-xacro ros-jazzy-rviz2 ros-jazzy-tf2-ros\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#32-verificacion","title":"3.2 Verificaci\u00f3n","text":"<pre><code>ros2 pkg prefix xacro\nros2 pkg prefix robot_state_publisher\nros2 pkg prefix joint_state_publisher_gui\nros2 pkg prefix rviz2\nros2 pkg prefix tf2_ros\n</code></pre> <p>Si no muestra error, todo est\u00e1 bien. Debe mostrar la ruta de instalaci\u00f3n.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#4-instalacion-de-gazebo-harmonic","title":"4. Instalaci\u00f3n de Gazebo Harmonic","text":"<p>Gu\u00eda oficial: Gazebo Harmonic \u2013 Install on Ubuntu</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#41-instalacion","title":"4.1 Instalaci\u00f3n","text":"<p><pre><code>sudo apt update\nsudo apt install gz-harmonic\n</code></pre> Warning : En algunos casos, el binario gz puede no quedar en el PATH hasta reiniciar sesi\u00f3n o volver a ejecutar source /opt/ros/jazzy/setup.bash.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#42-prueba-directa","title":"4.2 Prueba directa","text":"<pre><code>gz sim shapes.sdf\n</code></pre> <p>Deber\u00eda abrirse una ventana de Gazebo con un mundo de prueba.</p> <p></p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#43-lanzar-gazebo-con-ros-2","title":"4.3 Lanzar Gazebo con ROS 2","text":"<pre><code>ros2 launch ros_gz_sim gz_sim.launch.py\n</code></pre> <p>Usar cualquier ejemplo para probar </p> <p></p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#5-preparar-workspace-ros-2-en-wsl2","title":"5. Preparar Workspace ROS 2 en WSL2","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#51-ubicacion-recomendada","title":"5.1 Ubicaci\u00f3n recomendada","text":"<p>Tip: Trabaja dentro del sistema Linux (<code>~/ros2_ws</code>) y no en <code>/mnt/c/...</code></p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#52-clonar-repositorio","title":"5.2 Clonar repositorio","text":"<p>On GitHub (or GitLab/Bitbucket):</p> <ol> <li>New repository \u2192 Nombralo: <code>ros2-jazzy-mobile-robot</code> (o lo que gustes).</li> <li>Inicializa con un README (checked).</li> <li>(Optional) Agrega una LICENSE (MIT es com\u00fan).</li> <li>Deja <code>.gitignore</code> vac\u00edo por ahora (agregaremos uno amigable con ROS m\u00e1s adelante).</li> <li>Copia el SSH del repositorio (por ejemplo, <code>git@github.com:Gulden8ag/ROS2_Tractor.git</code>).</li> </ol> <pre><code>cd ~\ngit clone git@github.com:Gulden8ag/ROS2_Tractor.git ros2_ws\ncd ~/ros2_ws\n</code></pre> <p>Confirma que estas en <code>main</code> branch.</p> <pre><code>git status\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#53-configurar-ssh-keys-para-github","title":"5.3 Configurar SSH keys para GitHub","text":"<p><pre><code># 1) Make a key (press Enter for default path; add a passphrase if you want)\nssh-keygen -t ed25519 -C \"oliver.ochoa2@iberopuebla.mx\"\n\n# 2) Start agent &amp; add the key\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n\n# 3) Copy the public key to clipboard (or just print and copy)\ncat ~/.ssh/id_ed25519.pub\n</code></pre> Usa el default solo presionando Enter. Lo guardara en: - Private key \u2192 <code>/home/oliver_ros2/.ssh/id_ed25519</code> - Public key \u2192 <code>/home/oliver_ros2/.ssh/id_ed25519.pub</code></p> <p>Esta es la ubicaci\u00f3n por defecto y recomendada. Ahora entra a GitHub:</p> <ol> <li>Ve a GitHub \u2192 Settings \u2192 SSH and GPG keys \u2192 New SSH key.</li> <li>Pega todo el contenido de <code>id_ed25519.pub</code> \u2192 Add SSH key.</li> <li>Prueba la conexi\u00f3n:</li> </ol>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#ssh-t-gitgithubcom-expect-a-prompt-to-trust-github-then-hi-your-usernameyouve-successfully-authenticated-but-github-does-not-provide-shell-access","title":"<pre><code>ssh -T git@github.com # Expect a prompt to trust GitHub; then \"Hi &lt;your-username&gt;!You've successfully authenticated, but GitHub does not provide shell access.\"\n</code></pre>","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#54-crear-el-esqueleto-workspace-de-ros2","title":"5.4 Crear el esqueleto Workspace de ROS2","text":"<p>Creamos la estructura b\u00e1sica del workspace:</p> <p><pre><code>cd ~/ros2_ws\nmkdir -p src\nprintf \"# ROS 2 Jazzy Mobile Robot\\n\\nWorkspace for learning ROS 2 Jazzy on WSL2 with Gazebo Harmonic.\\n\" &gt; README.md\n</code></pre> Creamos un <code>.gitignore</code> amigable con ROS:</p> <pre><code>cat &gt; .gitignore &lt;&lt; 'EOF'\n# colcon/ROS 2 build artifacts\nbuild/\ninstall/\nlog/\n\n# Python caches\n__pycache__/\n*.pyc\n\n# VS Code / CLion / IDE stuff\n.vscode/\n.idea/\n\n# macOS / Windows cruft\n.DS_Store\nThumbs.db\n\n# CMake extras\nCMakeFiles/\nCMakeCache.txt\ncmake-build-*/\ncompile_commands.json\n\n# Misc\n*.swp\nEOF\n</code></pre> <p>Hacemos un commit inicializando el workspace:</p> <pre><code>git add .\ngit commit -m \"chore: initialize Jazzy workspace with src/ and ROS2 .gitignore\"\ngit push\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#6-crear-primer-paquete-python-mi_robot","title":"6. Crear primer paquete Python <code>mi_robot</code>","text":"<p>Convenciones:</p> <ul> <li>Nombres de paquetes en min\u00fasculas y con guiones bajos.</li> <li>Nombres de nodos en min\u00fasculas y con guiones bajos.</li> <li>Nombres de archivos en min\u00fasculas y con guiones bajos.</li> </ul> <p>Ahora usaremos los siguientes de ejemplo pero los puedes modificar: - Workspace: <code>ros2_ws</code> - Paquete: <code>mi_robot</code></p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#61-creacion","title":"6.1 Creaci\u00f3n","text":"<pre><code>cd ~/ros2_ws/src\nros2 pkg create --build-type ament_python mi_robot\n</code></pre> <p>Esto generar\u00e1 la estructura b\u00e1sica del paquete.</p> <pre><code>ros2_ws/\n\u2514\u2500 src/\n   \u2514\u2500 mi_robot/\n      \u251c\u2500 package.xml\n      \u251c\u2500 setup.py\n      \u251c\u2500 setup.cfg\n      \u251c\u2500 resource/mi_robot\n      \u251c\u2500 mi_robot/__init__.py\n      \u2514\u2500 test/\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#62-dependencias-iniciales-solo-si-la-maquina-es-nueva","title":"6.2 Dependencias iniciales (solo si la maquina es nueva)","text":"<pre><code>sudo rosdep init\nrosdep update\nrosdep install --from-paths src -y --rosdistro jazzy\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#63-abrir-en-vs-code","title":"6.3 Abrir en VS Code","text":"<p><pre><code>cd ~/ros2_ws\ncode .\n</code></pre> Se recomienda instalar las siguientes extensiones: - Python - Robotics Developer Environment - C/C++</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#7-crear-nodo-de-prueba","title":"7. Crear nodo de prueba","text":"<p>En VsCode: <code>src/mi_robot/mi_robot/</code> \u2192 New File \u2192 <code>talker.py</code></p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#71-archivo-talkerpy","title":"7.1 Archivo <code>talker.py</code>","text":"<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom std_msgs.msg import String\n\nclass Talker(Node):\n    def __init__(self):\n        super().__init__('talker')\n        self.pub = self.create_publisher(String, 'chatter', 10)\n        self.timer = self.create_timer(0.5, self.tick)\n        self.i = 0\n\n    def tick(self):\n        msg = String()\n        msg.data = f\"Hello ROS 2 ({self.i})\"\n        self.pub.publish(msg)\n        self.get_logger().info(msg.data)\n        self.i += 1\n\ndef main():\n    rclpy.init()\n    node = Talker()\n    rclpy.spin(node)\n    node.destroy_node()\n    rclpy.shutdown()\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#72-editar-srcmi_robotsetuppy","title":"7.2 Editar <code>src/mi_robot/setup.py</code>","text":"<pre><code>entry_points={\n    'console_scripts': [\n        'talker = mi_robot.talker:main',\n    ],\n},\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#8-build-run","title":"8. Build &amp; Run","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#81-compilar","title":"8.1 Compilar","text":"<pre><code>cd ~/ros2_ws\nsource /opt/ros/jazzy/setup.bash\nrosdep install --from-paths src -y --rosdistro jazzy\ncolcon build --symlink-install\nsource install/setup.bash\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#82-ejecutar","title":"8.2 Ejecutar","text":"<pre><code>ros2 run mi_robot talker\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#9-urdf-minimo-y-launch-con-rviz","title":"9. URDF m\u00ednimo y Launch con RViz","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#91-crear-archivos","title":"9.1 Crear archivos","text":"<p>En VS Code Explorer crear adentro de <code>src/mi_robot/</code>:</p> <ul> <li>folders: <code>launch/</code>, <code>urdf/</code>, <code>rviz/</code></li> <li>files: <code>launch/display.launch.py</code>, <code>urdf/robot.urdf.xacro</code> (leave <code>rviz/</code> empty for now; we\u2019ll save a config from RViz later)</li> </ul> <p>Alternativamente puedes correr este comando bash:</p> <pre><code>cd ~/ros2_ws/src/mi_robot\nmkdir launch urdf rviz\ntouch launch/display.launch.py urdf/robot.urdf.xacro rviz/display.rviz\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#92-archivo-urdfroboturdfxacro","title":"9.2 Archivo <code>urdf/robot.urdf.xacro</code>","text":"<p>Abre <code>src/mi_robot/urdf/robot.urdf.xacro</code> y pega:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;robot xmlns:xacro=\"http://ros.org/wiki/xacro\" name=\"mi_robot\"&gt;\n  &lt;!-- One visible base link so RViz shows *something* --&gt;\n  &lt;link name=\"base_link\"&gt;\n    &lt;visual&gt;\n      &lt;origin xyz=\"0 0 0.1\"/&gt;\n      &lt;geometry&gt;\n        &lt;box size=\"0.3 0.2 0.1\"/&gt; &lt;!-- 30\u00d720\u00d710 cm --&gt;\n      &lt;/geometry&gt;\n      &lt;material name=\"blue\"&gt;&lt;color rgba=\"0.1 0.3 0.9 1.0\"/&gt;&lt;/material&gt;\n    &lt;/visual&gt;\n    &lt;collision&gt;\n      &lt;origin xyz=\"0 0 0.1\"/&gt;\n      &lt;geometry&gt;&lt;box size=\"0.3 0.2 0.1\"/&gt;&lt;/geometry&gt;\n    &lt;/collision&gt;\n    &lt;!-- inertial is optional for RViz-only; add later for physics --&gt;\n  &lt;/link&gt;\n&lt;/robot&gt;\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#93-archivo-launchdisplaylaunchpy","title":"9.3 Archivo <code>launch/display.launch.py</code>","text":"<p>Abre <code>src/mi_robot/launch/display.launch.py</code> y pega:</p> <pre><code>from launch import LaunchDescription\nfrom launch_ros.actions import Node\nfrom ament_index_python.packages import get_package_share_directory\nimport os\nimport xacro\n\ndef generate_launch_description():\n    pkg_share = get_package_share_directory('mi_robot')\n    urdf_path = os.path.join(pkg_share, 'urdf', 'robot.urdf.xacro')\n\n    # Turn Xacro into a URDF string\n    robot_description_config = xacro.process_file(urdf_path).toxml()\n\n    return LaunchDescription([\n        # Anchor the robot so RViz has a fixed frame:\n        # map -&gt; base_link (no rotation)\n        Node(\n            package='tf2_ros',\n            executable='static_transform_publisher',\n            arguments=['0', '0', '0', '0', '0', '0', 'map', 'base_link'],\n            name='map_to_base_link'\n        ),\n\n        Node(\n            package='joint_state_publisher_gui',\n            executable='joint_state_publisher_gui',\n            name='joint_state_publisher_gui'\n        ),\n\n        Node(\n            package='robot_state_publisher',\n            executable='robot_state_publisher',\n            name='robot_state_publisher',\n            parameters=[{'robot_description': robot_description_config}]\n        ),\n\n        Node(\n            package='rviz2',\n            executable='rviz2',\n            name='rviz2'\n            # You can add ['-d', '&lt;path to rviz/display.rviz&gt;'] after you save one\n        ),\n    ])\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#94-actualizar-packagexml-y-setuppy","title":"9.4 Actualizar <code>package.xml</code> y <code>setup.py</code>","text":"<p>Abre <code>src/mi_robot/package.xml</code> y agrega:</p> <pre><code>&lt;package format=\"3\"&gt;\n  &lt;name&gt;mi_robot&lt;/name&gt;\n  &lt;version&gt;0.0.0&lt;/version&gt;\n  &lt;description&gt;Single-package robot demo&lt;/description&gt;\n\n  &lt;maintainer email=\"oliver.ochoa2@iberopuebla.mx\"&gt;Oliver Ochoa&lt;/maintainer&gt;\n  &lt;license&gt;MIT&lt;/license&gt;\n\n  &lt;!-- Build system --&gt;\n  &lt;buildtool_depend&gt;ament_python&lt;/buildtool_depend&gt;\n\n  &lt;!-- Runtime deps used in launch/URDF/RViz --&gt;\n  &lt;exec_depend&gt;ament_index_python&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;xacro&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;robot_state_publisher&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;joint_state_publisher_gui&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;rviz2&lt;/exec_depend&gt;\n  &lt;exec_depend&gt;tf2_ros&lt;/exec_depend&gt;\n\n  &lt;export&gt;\n    &lt;build_type&gt;ament_python&lt;/build_type&gt;\n  &lt;/export&gt;\n&lt;/package&gt;\n</code></pre> <p>Abre <code>src/mi_robot/setup.py</code> y agrega:</p> <pre><code>from setuptools import setup\nimport os\nfrom glob import glob\n\npackage_name = 'mi_robot'\n\nsetup(\n    name=package_name,\n    version='0.0.0',\n    packages=[package_name] if os.path.isdir(package_name) else [],\n    data_files=[\n        (os.path.join('share', package_name), ['package.xml']),\n        (os.path.join('share', package_name, 'launch'), glob('launch/*.py')),\n        (os.path.join('share', package_name, 'urdf'),   glob('urdf/*.xacro')),\n        (os.path.join('share', package_name, 'rviz'),   glob('rviz/*.rviz')),\n    ],\n    install_requires=['setuptools'],\n    zip_safe=True,\n    maintainer='Oliver Ochoa',\n    maintainer_email='oliver.ochoa2@iberopuebla.mx',\n    description='Single-package robot with URDF + launch + RViz',\n    license='MIT',\n    tests_require=['pytest'],\n    entry_points={'console_scripts': []},\n)\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#9-ejecutar","title":"9. Ejecutar","text":"<pre><code>cd ~/ros2_ws\ncolcon build --symlink-install\nsource install/setup.bash\nros2 launch mi_robot display.launch.py\n</code></pre> <ul> <li>En RViz, pon el Fixed Frame a mapa (Estamos publicando <code>map -&gt; base_link</code>).</li> </ul> <ul> <li>Agrega un <code>RobotModel</code> en RViz para ver el robot.</li> <li>En Description_topic pon <code>/robot_description</code>.</li> </ul> <ul> <li>Deberias ver un cubo azul (base_link).</li> </ul> <p>Si todo se visualiza correctamente, termina guardando la configuraci\u00f3n de  RVizFile \u2192 Save Config en <code>src/mi_robot/rviz/display.rviz</code>, para que se cargue autom\u00e1ticamente la pr\u00f3xima vez que abras RViz desde el launch file.</p> <p>Modifica el launch file para que cargue el config:</p> <pre><code># In display.launch.py, replace the rviz Node with:\nNode(\n    package='rviz2',\n    executable='rviz2',\n    arguments=['-d', os.path.join(pkg_share, 'rviz', 'display.rviz')],\n    name='rviz2'\n),\n</code></pre> <p>Reconstrute y vuelve a lanzar:</p> <pre><code>cd ~/ros2_ws\ncolcon build --symlink-install\nsource install/setup.bash\nros2 launch mi_robot display.launch.py\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_1/#10-commit-final","title":"10. Commit final","text":"<pre><code>git add .\ngit commit -m \"feat: minimal URDF + display.launch\"\ngit push\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/","title":"Tutorial: Creaci\u00f3n de Usuarios y Acceso Remoto por SSH en Raspberry Pi 5","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#1-crear-un-usuario-en-raspberry-pi","title":"1. Crear un usuario en Raspberry Pi","text":"<p>Con\u00e9ctate a tu Raspberry Pi con teclado y monitor, o con\u00e9ctate v\u00eda SSH usando el usuario por defecto si ya est\u00e1 habilitado.</p> <pre><code># Crear un nuevo usuario\nsudo adduser nombre_usuario\n\n# Agregar el usuario al grupo sudo (permisos administrativos)\nsudo usermod -aG sudo nombre_usuario\n</code></pre> <p>Durante <code>adduser</code> se pedir\u00e1 la contrase\u00f1a y algunos datos opcionales.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#2-habilitar-el-servicio-ssh","title":"2. Habilitar el servicio SSH","text":"<p>En Raspberry Pi OS (Debian Bookworm):</p> <pre><code># Habilitar el servicio SSH\nsudo systemctl enable ssh\nsudo systemctl start ssh\n\n# Verificar estado\nsystemctl status ssh\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#3-obtener-la-direccion-ip-de-la-raspberry-pi","title":"3. Obtener la direcci\u00f3n IP de la Raspberry Pi","text":"<p>Ejecuta en la Raspberry Pi:</p> <pre><code>hostname -I\n</code></pre> <p>Ejemplo de salida: <pre><code>192.168.1.45\n</code></pre></p> <p>Esta IP se usar\u00e1 para conectarse desde Windows.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#4-configurar-conexion-desde-windows-con-vs-code-y-remote-ssh","title":"4. Configurar conexi\u00f3n desde Windows con VS Code y Remote-SSH","text":""},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#41-requisitos-previos","title":"4.1 Requisitos previos","text":"<ol> <li>Instalar Visual Studio Code.</li> <li>Instalar la extensi\u00f3n Remote - SSH en VS Code.</li> <li>Asegurarse de tener instalado el cliente OpenSSH en Windows:</li> <li>En PowerShell:    <pre><code>Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH.Client*'\n</code></pre></li> </ol>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#42-configurar-archivo-config-de-ssh-en-windows","title":"4.2 Configurar archivo <code>config</code> de SSH en Windows","text":"<p>Editar (o crear) el archivo <code>config</code> en:</p> <pre><code>C:\\Users\\TU_USUARIO\\.ssh\\config\n</code></pre> <p>Agregar:</p> <pre><code>Host rpi5\n    HostName 192.168.1.45\n    User nombre_usuario\n    Port 22\n</code></pre>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#5-probar-la-conexion","title":"5. Probar la conexi\u00f3n","text":"<p>En terminal de Windows (PowerShell o CMD):</p> <pre><code>ssh rpi5\n</code></pre> <p>Si funciona, en VS Code: 1. Presiona <code>F1</code>. 2. Selecciona Remote-SSH: Connect to Host.... 3. Elige <code>rpi5</code>.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#6-configuracion-opcional-claves-ssh-en-lugar-de-contrasena","title":"6. Configuraci\u00f3n opcional: Claves SSH en lugar de contrase\u00f1a","text":"<p>En Windows:</p> <pre><code>ssh-keygen -t ed25519 -C \"tu_correo@example.com\"\nssh-copy-id nombre_usuario@192.168.1.45\n</code></pre> <p>Esto permite entrar sin escribir contrase\u00f1a en cada conexi\u00f3n.</p>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#7-posibles-errores-por-proteccion-de-red-universitaria","title":"7. Posibles errores por protecci\u00f3n de red universitaria","text":"<p>En entornos universitarios es com\u00fan que la red tenga protecciones adicionales:</p> <ol> <li>Aislamiento de clientes (AP isolation): aunque la PC y la Raspberry est\u00e9n en el mismo Wi-Fi, pueden estar bloqueadas para comunicarse entre s\u00ed.</li> <li> <p>S\u00edntoma: <code>ping</code> falla aunque ambos tengan IP en la misma subred.</p> </li> <li> <p>Puertos bloqueados por firewall: el puerto 22 (SSH) puede estar cerrado.</p> </li> <li> <p>S\u00edntoma: <code>ping</code> responde pero <code>ssh</code> se queda colgado o muestra \"connection refused\".</p> </li> <li> <p>Segmentaci\u00f3n por VLAN: la PC y la Raspberry pueden estar en redes diferentes sin ruta directa.</p> </li> <li> <p>S\u00edntoma: no hay conectividad aunque ambos est\u00e9n en la red universitaria.</p> </li> <li> <p>Captive portal o registro obligatorio de dispositivos: la Raspberry debe registrarse con direcci\u00f3n MAC antes de tener acceso a la red.</p> </li> </ol>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#diagnostico-rapido","title":"Diagn\u00f3stico r\u00e1pido","text":"<ul> <li>Desde Windows:   <pre><code>ping 192.168.1.45\nTest-NetConnection -ComputerName 192.168.1.45 -Port 22\n</code></pre></li> </ul>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#alternativas-si-la-red-bloquea-ssh","title":"Alternativas si la red bloquea SSH","text":"<ul> <li>Solicitar a TI permisos para habilitar el puerto 22 entre tu PC y la Raspberry.</li> <li>Usar Tailscale o ZeroTier para crear una red privada virtual entre tus dispositivos.</li> <li>Configurar t\u00faneles reversos hacia un servidor externo (VPS).</li> </ul>"},{"location":"Proyecto_Agricola/Tutoriales/Tema_2_2/#8-recomendacion-final","title":"8. Recomendaci\u00f3n final","text":"<p>Antes de depender del acceso remoto en un laboratorio universitario: - Verifica conectividad con <code>ping</code> y <code>Test-NetConnection</code>. - Si falla, contacta al \u00e1rea de TI con la IP y MAC de la Raspberry, explicando que es para uso acad\u00e9mico. - Considera usar Tailscale si necesitas evitar solicitudes de apertura de puertos.</p>"}]}